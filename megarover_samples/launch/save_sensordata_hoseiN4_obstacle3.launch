<!--
サンプルマップ用の空間でGazebo上のシミュレータを立ち上げるlaunch

vmega_samplemap.yaml/pgmに対応した空間です。

起動コマンド：roslaunch save_sensordata save_sensordata.launch
-->
<launch>
  <arg name="x" default="-1"/>
  <arg name="y" default="-1"/>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="model" default="$(find megarover_samples)/robots/vmegarover.urdf.xacro"/>
  <arg name="paused" default="true"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
	<arg name="world_name" value="$(find megarover_samples)/worlds/hoseiN4_obstacle3.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description"
		command="$(find xacro)/xacro.py '$(arg model)'" />
  
  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -model vmegarover -param robot_description -x $(arg x) -y $(arg y)"/>


  <!-- ros_control motoman launch file -->
  <include file="$(find megarover_samples)/launch/vmegarover_control.launch"/>

  <!-- rviz -->
  <node pkg="rviz" type="rviz" args="-d '$(find megarover_samples)/configuration_files/rviz/gmapping.rviz'" name="visualizer" respawn="true" />

  <!-- save_sensordata -->
  <node pkg="hoshi" type="sensordata_saver" name="sensordata_saver" output="screen"/>

</launch>
